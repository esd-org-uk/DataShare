@model DS.Domain.DataSetSchema
@{
    ViewBag.Title = "Create schema - Admin - DataShare";
    Layout = "~/Areas/Admin/Views/Shared/_LayoutPage.cshtml";
}

@section TitleContent
{
    Create schema
}

@section HeaderContent{
  <script src="@Url.Content("/Areas/Admin/Scripts/plugins/tiny_mce/tiny_mce.js")" type="text/javascript"></script>
  <script type="text/javascript">
      $(document).ready(function () {

          tinyMCE.init({
              // General options
              mode: "specific_textareas",
              editor_selector: "mceEditor",
              theme: "advanced",
              plugins: "advimage,inlinepopups,searchreplace,table,visualchars,xhtmlxtras",
              width: "99%",
              // Theme options
              theme_advanced_buttons1: "formatselect,bold,italic,|,justifyleft,justifycenter,justifyright,|,bullist,numlist,|,cut,copy,paste,pastetext,pasteword,|,search,replace,|,undo,redo,|,link,unlink,anchor,table,image,cleanup,code",
              theme_advanced_buttons2: "",
              theme_advanced_buttons3: "",
              theme_advanced_toolbar_location: "top",
              theme_advanced_toolbar_align: "left",
              theme_advanced_statusbar_location: "bottom",
              theme_advanced_resizing: false
          });

          //Set up tabs with transition effect
          tabHolder = $("#Steps");
            tabHolder.tabs({
                fx: { opacity: 'toggle', duration: 'fast' }, show: function (event, ui) { if (ui.index == 1) { $('#TopSave').fadeIn(400) } }
          });
          
          //update hidden textarea when submitting form/moving to next tab
          $('#submitButton').focus(function () {
              tinyMCE.triggerSave();
          });

      });
    </script>
}

<div class="container_16">
    <p class="intro grid_16">A schema is a container for data sets. Create a new schema using the options below.</p>
    <div id="Steps" class="grid_16">
        <ul>
            
            <li class="tab" ><a id="a-step-1" href="#step-1">Step 1 - Schema detail</a></li>
            <li class="tab"><a href="#step-2">Step 2 - Classification</a></li>
            <li class="tab"><a href="#step-3">Step 3 - Fields</a></li>
        </ul>
        @Html.Raw(ViewBag.Message)        
        @using (Html.BeginForm())
        {
            <div id="step-1">

           
                @Html.ValidationSummary(true, "Unable to create schema, please correct the following:")


                <input type="hidden" id="categoryName" name="categoryName" value="@ViewBag.CategoryName" />
                @Html.ValidationMessageFor(model => model.Title)
                <div class="editor-field">
                    
                    @Html.LabelFor(model => model.Title)
                    @Html.EditorFor(model => model.Title)
                    <span class="helptext">The title to display for this schema.</span>
                    
                </div>

                @Html.ValidationMessageFor(model => model.ShortDescription)
                <div class="editor-field">
                    
                    @Html.LabelFor(model => model.ShortDescription)
                    @Html.TextAreaFor(model => model.ShortDescription, new { @class = "text-box multi-line short" })
                    <span class="helptext">A brief description of this schema (Max 500 characters).</span>
                    
                </div>

                @Html.ValidationMessageFor(model => model.Description)
                <div class="editor-field">
                    @Html.LabelFor(model => model.Description)
                    @Html.TextAreaFor(model => model.Description, new { @class = "multi-line text-box mceEditor" })
                </div>

                @Html.ValidationMessageFor(model => model.IsFeatured)
                    <div class="editor-field">                    
                        @Html.LabelFor(model => model.IsFeatured)
                        @Html.EditorFor(model => model.IsFeatured)
                        <span class="helptext">Tick this box to make this schema appear on the home page as a featured item.</span>
                    </div>
                @Html.ValidationMessageFor(model => model.UploadFrequency)
                <div class="editor-field">
                    
                    @Html.LabelFor(model => model.UploadFrequency)
                    @Html.DropDownListFor(model => model.UploadFrequency, new[] { new SelectListItem { Text = "Ad-hoc", Value = "0" }, new SelectListItem { Text = "Weekly", Value = "7" }, new SelectListItem { Text = "Monthly", Value = "30" }, new SelectListItem { Text = "Quarterly", Value = "92" }, new SelectListItem { Text = "Annually", Value = "365" } })
                    <span class="helptext">How often this schema should have new datasets uploaded into it.</span>
                    
                </div>
                <div class="editor-field talllabel">                    
                    @Html.LabelFor(model => model.IsAllDataOverwittenOnUpload)
                    @Html.EditorFor(model => model.IsAllDataOverwittenOnUpload)
                    <span class="helptext">Tick this box to overwrite all data every time a csv is uploaded.</span>
                </div>
                
                <div id="EmailHolder" class="editor-field">
                    @Html.ValidationMessageFor(model => model.OwnerEmail)                   
                    @Html.LabelFor(model => model.OwnerEmail)
                    @Html.EditorFor(model => model.OwnerEmail)
                    <span class="helptext">The email address to be notified when updates are due.</span>                    
                </div>
                <div class="right">
                    <input id="submitButton" type="submit" class="blue large button submit" value="Next" />
                </div>

        </div>

        }
    </div>
  </div> 
  
  @section FooterScripts {
<script type="text/javascript">
    $(document).ready(function () {

        setupEmail($('#UploadFrequency').val())
        //set up email field show/hide
        $('#UploadFrequency').change(function () {
            setupEmail($(this).val());
        });

        function setupEmail(freq) {
            if (freq != '0') {
                $('#EmailHolder').fadeIn(400);
            } else {
                $('#EmailHolder').fadeOut(400);
                $('#OwnerEmail').val('');
            }
        }
            
    });
</script>
}
        
          